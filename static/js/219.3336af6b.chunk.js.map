{"version":3,"file":"static/js/219.3336af6b.chunk.js","mappings":"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","sources":["webpack://react-s-nulya-1/./src/Components/Profile/ProfileInfo/ProfileInfo.module.css?23b5","Components/Profile/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-s-nulya-1/./src/Components/Profile/MyPosts/MyPosts.module.css?bd90","webpack://react-s-nulya-1/./src/Components/Profile/MyPosts/Post/Post.module.css?54ab","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"fon\":\"ProfileInfo_fon__MkDIv\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__ip1db\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"Введите статус\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile){\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           {/* <div className={s.fon}>\r\n                <img\r\n                    src=\"https://images.ctfassets.net/hrltx12pl8hq/7yQR5uJhwEkRfjwMFJ7bUK/dc52a0913e8ff8b5c276177890eb0129/offset_comp_772626-opt.jpg?fit=fill&w=800&h=300\"\r\n                    alt=\"first-photo\"/>\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large} alt=\"photo\"/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n                <div>Обо мне: {props.profile.aboutMe}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__CC5te\",\"posts\":\"MyPosts_posts__HCtTI\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__GBEvF\"};","import s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src= {props.avatar} alt=\"avatar\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>like: {props.likes}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, requireField} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newPostText'} placeholder={'Добавить текст поста'}\r\n                validate={[requireField, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostReduxForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm)\r\n const MyPosts = React.memo((props) => {\r\n\r\n        let postsElements = props.posts.map(p => <Post message={p.message} likes={p.likes} avatar={p.avatar}/>);\r\n\r\n        let newPostElement = React.createRef();\r\n\r\n        let onAddPost = (values) => {\r\n            props.addPost(values.newPostText);\r\n        }\r\n\r\n        return (\r\n            <div className={s.postsBlock}>\r\n                <h3>My posts</h3>\r\n                <AddNewPostReduxForm onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>);\r\n })\r\n\r\nexport default MyPosts","import React from \"react\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {addPostCreator} from \"../../../Redux/profile-reducer\";\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPost: (newPostText) => {dispatch(addPostCreator(newPostText))}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n            updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer store = {props.store} />\r\n        </div>)\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {getProfileThunkCreator, getStatusThunkCreator, updateStatusThunkCreator} from \"../../Redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate, useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            if(!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n\r\n        this.props.getProfileThunkCreator(userId)\r\n        this.props.getStatusThunkCreator(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile}\r\n                status={this.props.status} updateStatus={this.props.updateStatusThunkCreator}/>\r\n            </div>)\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nconst TakeParams = (props) => {\r\n    return <AuthRedirectComponent {...props} params={useParams()} />\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {getProfileThunkCreator,\r\n    getStatusThunkCreator,\r\n    updateStatusThunkCreator})(TakeParams)"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","s","src","photos","large","alt","aboutMe","avatar","message","likes","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","requireField","React","postsElements","posts","map","p","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostCreator","MyPosts","store","ProfileContainer","userId","this","params","authorizedUserId","history","push","getProfileThunkCreator","getStatusThunkCreator","updateStatusThunkCreator","AuthRedirectComponent","withAuthRedirect","auth","id","isAuth","useParams"],"sourceRoot":""}