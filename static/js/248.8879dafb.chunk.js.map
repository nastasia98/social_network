{"version":3,"file":"static/js/248.8879dafb.chunk.js","mappings":"0LACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0B,mBCW7K,EATmB,SAACA,GAChB,IAAIC,EAAOD,EAAME,GACjB,OACI,gBAAKC,UAAS,UAAKC,EAAL,YAAiBA,GAA/B,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,QAGrC,ECJD,EANoB,SAACN,GACjB,OACI,yBAAMA,EAAMO,SAEnB,E,uCCKKC,GAAcC,EAAAA,EAAAA,GAAiB,IAgB/BC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAdL,SAACX,GACpB,OACI,kBAAMa,SAAUb,EAAMc,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EAAUX,KAAM,iBAAkBY,YAAY,mIAChEC,SAAU,CAACC,EAAAA,EAAcZ,QAE7B,0BACI,2FAIf,IAyBD,EAtBgB,SAACR,GAEb,IAAIqB,EAAkBrB,EAAMsB,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYlB,KAAMkB,EAAElB,KAAMJ,GAAIsB,EAAEtB,IAApC,IACrCuB,EAAmBzB,EAAM0B,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAapB,QAASoB,EAAEpB,SAA5B,IAM3C,OACI,iBAAKJ,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKiB,KAEL,iBAAKlB,UAAWC,EAAhB,WACI,yBAAMqB,KACN,SAACf,EAAD,CAAqBG,SAXb,SAACe,GACjB5B,EAAM6B,YAAYD,EAAOE,eAC5B,SAaJ,E,oBCpBD,GALyBC,E,QAAAA,KACrBC,EAAAA,EAAAA,KAfkB,SAACC,GACnB,MAAM,CACFX,QAASW,EAAMC,aAAaZ,QAC5BI,SAAUO,EAAMC,aAAaR,SAC7BI,eAAgBG,EAAMC,aAAaJ,eAE1C,IAEwB,SAACK,GACtB,MAAM,CACFN,YAAa,SAACC,GAAoBK,GAASC,EAAAA,EAAAA,GAAmBN,GAAiB,EAEtF,IAIGO,EAAAA,EAFqBN,CAEHO,E","sources":["webpack://react-s-nulya-1/./src/Components/Dialogs/Dialogs.module.css?db5c","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/MessageItem/MessageItem.jsx","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__VQZ+N\",\"dialogsItems\":\"Dialogs_dialogsItems__YyT80\",\"dialog\":\"Dialogs_dialog__hq2d4\",\"active\":\"Dialogs_active__1ENpK\",\"messages\":\"Dialogs_messages__TKGDo\",\"message\":\"Dialogs_message__bSzVX\"};","import s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = props.id;\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","const MessageItem = (props) => {\r\n    return (\r\n        <div>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requireField} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\nconst AddMessageForm = (props) =>{\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={'newMessageBody'} placeholder='Введите новое сообщение'\r\n                validate={[requireField, maxLength20]}/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    let messagesElements = props.messages.map(m => <MessageItem message={m.message}/>)\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../Redux/message-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogs: state.messagesPage.dialogs,\r\n        messages: state.messagesPage.messages,\r\n        newMessageBody: state.messagesPage.newMessageBody,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (newMessageBody) => {dispatch(sendMessageCreator(newMessageBody))}\r\n    }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect)(Dialogs)\r\n//connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent); //настроили коннект двумя функциями\r\n\r\nexport default DialogsContainer;"],"names":["props","path","id","className","s","to","name","message","maxLength20","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requireField","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","compose","connect","state","messagesPage","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}